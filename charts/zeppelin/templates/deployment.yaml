apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zeppelin.fullname" . }}
  labels:
    {{- include "zeppelin.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "zeppelin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zeppelin.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init-config
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - '/bin/sh'
            - '-c'
            - >
              cp conf/* prepared_conf;
          volumeMounts:
            - name: init-config
              mountPath: /opt/zeppelin/conf/log4j.properties
              subPath: log4j.properties
            - name: zeppelin-site-config
              mountPath: /opt/zeppelin/conf/zeppelin-site.xml
              subPath: zeppelin-site.xml
            - name: interpreter-config
              mountPath: /opt/zeppelin/conf/interpreter.json
              subPath: interpreter.json
            - name: config
              mountPath: /opt/zeppelin/prepared_conf
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          # https://issues.apache.org/jira/browse/ZEPPELIN-3620
          - name: ZEPPELIN_PORT
            value: {{ .Values.service.internalPort | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
            - name: rpc
              containerPort: {{ .Values.service.rpcPort }}
              protocol: TCP
            - name: spark-ui
              containerPort: {{ .Values.sparkInterpreter.spark.webui.port }}
              protocol: TCP
            - name: driver
              containerPort: {{ .Values.sparkInterpreter.spark.driver.port }}
              protocol: TCP
            - name: block-manager
              containerPort: {{ .Values.sparkInterpreter.spark.driver.blockManagerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 30
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: 20
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /opt/zeppelin/conf
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: init-config
          configMap:
            name: {{ include "zeppelin.fullname" . }}-config
            items:
            - key: log4j.properties
              path: log4j.properties
        - name: zeppelin-site-config
          configMap:
            name: {{ include "zeppelin.fullname" . }}-site-config
            items:
            - key: zeppelin-site.xml
              path: zeppelin-site.xml
        - name: interpreter-config
          configMap:
            name: {{ include "zeppelin.fullname" . }}-interpreter-config
            items:
            - key: interpreter.json
              path: interpreter.json
        - name: config
          emptyDir: {}
